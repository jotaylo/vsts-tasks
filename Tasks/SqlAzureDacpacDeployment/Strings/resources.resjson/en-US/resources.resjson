{
  "loc.friendlyName": "Azure SQL Database Deployment",
  "loc.helpMarkDown": "[More Information](https://aka.ms/sqlazuredeployreadme)",
  "loc.description": "Deploy Azure SQL DB using DACPAC or run scripts using SQLCMD",
  "loc.instanceNameFormat": "Execute Azure SQL : $(TaskNameSelector)",
  "loc.group.displayName.target": "SQL DB Details",
  "loc.group.displayName.taskDetails": "Deployment Package",
  "loc.group.displayName.firewall": "Firewall",
  "loc.input.label.ConnectedServiceNameSelector": "Azure Connection Type",
  "loc.input.label.ConnectedServiceName": "Azure Classic Subscription",
  "loc.input.help.ConnectedServiceName": "Target Azure Classic subscription for deploying SQL files",
  "loc.input.label.ConnectedServiceNameARM": "Azure RM Subscription",
  "loc.input.help.ConnectedServiceNameARM": "Target Azure Resource Manager subscription for deploying SQL files",
  "loc.input.label.ServerName": "Azure SQL Server Name",
  "loc.input.help.ServerName": "Azure SQL Server name, like Fabrikam.database.windows.net,1433 or Fabrikam.database.windows.net.",
  "loc.input.label.DatabaseName": "Database Name",
  "loc.input.help.DatabaseName": "Name of the Azure SQL Database, where the files will be deployed.",
  "loc.input.label.SqlUsername": "Server Admin Login",
  "loc.input.help.SqlUsername": "Specify the Azure SQL Server administrator login.",
  "loc.input.label.SqlPassword": "Password",
  "loc.input.help.SqlPassword": "Password for the Azure SQL Server administrator.<br>It can accept variable defined in Build/Release Definitions as '$(passwordVariable)'.<br>You may mark the variable type as 'secret' to secure it.",
  "loc.input.label.TaskNameSelector": "Type",
  "loc.input.label.DacpacFile": "DACPAC File",
  "loc.input.help.DacpacFile": "Location of the DACPAC file on the automation agent or on a UNC path accessible to the automation agent like, \\\\\\\\BudgetIT\\Web\\Deploy\\FabrikamDB.dacpac. Predefined system variables like, $(agent.releaseDirectory) can also be used here.",
  "loc.input.label.SqlFile": "SQL Script",
  "loc.input.help.SqlFile": "Location of the SQL script file on the automation agent or on a UNC path accessible to the automation agent like, \\\\\\\\BudgetIT\\Web\\Deploy\\FabrikamDB.sql. Predefined system variables like, $(agent.releaseDirectory) can also be used here.",
  "loc.input.label.SqlInline": "Inline SQL Script",
  "loc.input.help.SqlInline": "Enter the SQL script to execute on the Database selected above.",
  "loc.input.label.PublishProfile": "Publish Profile",
  "loc.input.help.PublishProfile": "Publish profile provides fine-grained control over Azure SQL Database creation or upgrades. Specify the path to the Publish profile XML file on the automation agent or on a UNC share. Predefined system variables like, $(agent.buildDirectory) or $(agent.releaseDirectory) can also be used here.",
  "loc.input.label.AdditionalArguments": "Additional SqlPackage.exe Arguments",
  "loc.input.help.AdditionalArguments": "Additional SqlPackage.exe arguments that will be applied when deploying the Azure SQL Database, in case DACPAC option is selected like, /p:IgnoreAnsiNulls=True /p:IgnoreComments=True. These arguments will override the settings in the Publish profile XML file (if provided).",
  "loc.input.label.SqlAdditionalArguments": "Additional Invoke-Sqlcmd Arguments",
  "loc.input.help.SqlAdditionalArguments": "Additional Invoke-Sqlcmd arguments that will be applied when executing the given SQL query on the Azure SQL Database like, -ConnectionTimeout 100 -OutputSqlErrors.",
  "loc.input.label.InlineAdditionalArguments": "Additional Invoke-Sqlcmd Arguments",
  "loc.input.help.InlineAdditionalArguments": "Additional Invoke-Sqlcmd arguments that will be applied when executing the given SQL query on the Azure SQL Database like, -ConnectionTimeout 100 -OutputSqlErrors",
  "loc.input.label.IpDetectionMethod": "Specify Firewall Rules Using",
  "loc.input.help.IpDetectionMethod": "For the task to run, the IP Address of the automation agent has to be added to the 'Allowed IP Addresses' in the Azure SQL Server's Firewall. Provide the IP Address range of the automation agents, or select to auto-detect in case of hosted automation agent.",
  "loc.input.label.StartIpAddress": "Start IP Address",
  "loc.input.help.StartIpAddress": "The starting IP Address of the automation agent machine pool like 196.21.30.50.",
  "loc.input.label.EndIpAddress": "End IP Address",
  "loc.input.help.EndIpAddress": "The ending IP Address of the automation agent machine pool like 196.21.30.65.",
  "loc.input.label.DeleteFirewallRule": "Delete Rule After Task Ends",
  "loc.input.help.DeleteFirewallRule": "If selected, then after the task ends, the IP Addresses specified here are deleted from the 'Allowed IP Addresses' list of the Azure SQL Server's Firewall.",
  "loc.messages.SAD_InvalidServerAddress": "Either IPAddress mentioned is not a valid IPv4 address or Sql database server: '{0}' does not exist.",
  "loc.messages.SAD_ServerNotFound": "Sql Database Server: '{0}' not found.",
  "loc.messages.SAD_InvalidIPv4Address": "IPAddress mentioned is not a valid IPv4 address.",
  "loc.messages.SAD_FoundMoreFiles": "Found more than one file to deploy with search pattern {0}. There can be only one.",
  "loc.messages.SAD_NoFilesMatch": "No files were found to deploy with search pattern {0}",
  "loc.messages.SAD_InvalidDacpacFile": "Invalid Dacpac file '{0}' provided",
  "loc.messages.SAD_InvalidSqlFile": "Invalid Sql file '{0}' provided",
  "loc.messages.SAD_NoPassword": "No password specified for the SQL User: '{0}'",
  "loc.messages.SAD_InvalidPublishProfile": "Invalid Publish Profile '{0}' provided",
  "loc.messages.SAD_InvalidServerNameFormat": "Server name '{0}' is not in the right format. Use FQDN format like '{1}'"
}